#!/usr/bin/env python
# encoding=utf-8
import os
import re
import sys
import argparse


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('-l', dest='list', action='store_true')
    parser.add_argument('-m', dest='mount', action='store_true')
    parser.add_argument('-a', type=str, default="ssh", choices=["ssh", "mount", "m"])
    parser.add_argument('-u', type=str)
    parser.add_argument('-H', type=str, default="")
    return parser.parse_args()


def load_list():
    result = {}
    conf_path = os.path.join(os.getenv('HOME'), '.ssh_list')
    for line in open(conf_path, 'r'):
        line = line.strip('\r\n\t ')
        if not line:
            continue
        try:
            host, port, user = re.split(r'\s+', line)
            port = int(port)
        except ValueError:
            print 'failed to parse line: %s' % (line)
        result[host] = {"port":port, "user":user}
    return result

def color_print(msg):
    print '\033[32m%s\033[0m' % msg

host_list = load_list()
args = parse_args()

# 显示列表
if args.list:
    print '+--------------------------------+'
    print '| %-10s | %-10s | %-4s |' % ('HOST', 'USER', 'PORT')
    print '|--------------------------------|'
    host_names = host_list.keys()
    host_names.sort()
    for host_name in host_names:
        host_info = host_list[host_name]
        print '| %-10s | %-10s | %-4d |' % (host_name, host_info['user'], host_info['port'])
    print '+--------------------------------+'
    sys.exit()

# 获取目标主机信息
if not args.H:
    print 'please specify the host!'
    sys.exit()
host = args.H
if host not in host_list:
    print '%s is not in host list!' % host
    sys.exit()
port = host_list[host]['port']
user = host_list[host]['user']
if args.u:
    user = args.u

if args.mount:
    args.a = "mount"

if args.a == "ssh":
    # ssh登录
    cmd = "ssh -o ServerAliveInterval=60 -p %d %s@%s" % (port, user, host)
    color_print('*** %s ***' % cmd)
    os.system(cmd)
elif args.a == "mount" or args.a == "m":
    # sshfs挂载
    mount_point = os.path.join(os.getenv('HOME'), 'mount', host)
    if not os.path.exists(mount_point):
        os.mkdir(mount_point)
    cmd = "sshfs -o ServerAliveInterval=60 -o reconnect -p %d %s@%s: %s" \
          % (port, user, host, mount_point)
    color_print('*** %s ***' % cmd)
    os.system(cmd)

